digraph "TemplateImmutableStruct::Private"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{TemplateImmutableStruct\l::Private\n||+ Private()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Private data of a template struct object."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +fields" ,arrowhead="odiamond"];
  Node2 [label="{std::unordered_map\l\< std::string, TemplateVariant \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond"];
  Node3 [label="{std::string\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node4 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond"];
  Node5 [label="{TemplateVariant\n||+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\l+ TemplateVariant()\land 28 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTemplateVariant.html",tooltip="Variant type which can hold one value of a fixed set of types."];
}
