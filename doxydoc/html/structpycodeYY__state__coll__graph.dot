digraph "pycodeYY_state"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{pycodeYY_state\n||}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +codeClassMap" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{std::unordered_map\l\< std::string, ScopedTypeVariant \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{std::string\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{std::basic_string\<\l Char \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{ScopedTypeVariant\n||+ ScopedTypeVariant()\l+ ScopedTypeVariant()\l+ ScopedTypeVariant()\l+ ScopedTypeVariant()\l+ ScopedTypeVariant()\l+ operator=()\l+ ~ScopedTypeVariant()\l+ setGlobal()\l+ setLocal()\l+ setDummy()\l+ type()\l+ name()\l+ localDef()\l+ globalDef()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classScopedTypeVariant.html",tooltip=" "];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +globalDef" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{Definition\n||+ definitionType()\l+ codeSymbolType()\l+ isAlias()\l+ name()\l+ isAnonymous()\l+ displayName()\l+ localName()\l+ qualifiedName()\l+ symbolName()\l+ getOutputFileBase()\land 50 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDefinition.html",tooltip=" "];
  Node7 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +localDef" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{LocalDef\n||+ insertBaseClass()\l+ baseClasses()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classLocalDef.html",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +classScope\n+curClassName\n+docBlock\n+exampleName\n+fileName\n+name\n+realScope\n+type" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{QCString\n||+ QCString()\l+ ~QCString()\l+ QCString()\l+ operator=()\l+ QCString()\l+ operator=()\l+ QCString()\l+ QCString()\l+ QCString()\l+ QCString()\land 69 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classQCString.html",tooltip=" "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +curClassBases" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{std::vector\< std::string \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +code" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{CodeOutputInterface\n||+ ~CodeOutputInterface()\l+ CodeOutputInterface()\l+ CodeOutputInterface()\l+ operator=()\l+ id()\l+ codify()\l+ writeCodeLink()\l+ writeLineNumber()\l+ writeTooltip()\l+ startCodeLine()\land 8 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCodeOutputInterface.html",tooltip=" "];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +currentFontClass\n+inputString" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{char\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +inputPosition" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{yy_size_t\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +collectXRefs\n+doubleQuote\n+doubleStringIsDoc\n+endComment\n+exampleBlock\n+includeCodeFragment\n+insideBody\n+insideCodeLine\n+noSuiteFound\n+searchingForBody\n..." ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{bool\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +currentDefinition\n+searchCtx" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +bodyCurlyCount\n+inputLines\n+paramParens\n+stringContext\n+yyLineNr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{int\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classint.html",tooltip=" "];
  Node15 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +sourceFileDef" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{FileDef\n||+ definitionType()\l+ name()\l+ displayName()\l+ fileName()\l+ getOutputFileBase()\l+ anchor()\l+ getSourceFileBase()\l+ includeName()\l+ includeDependencyGraphFile\lName()\l+ includedByDependencyGraph\lFileName()\land 61 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classFileDef.html",tooltip=" "];
  Node16 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{DefinitionMutable\n||+ setName()\l+ setId()\l+ setDefFile()\l+ setDocumentation()\l+ setBriefDescription()\l+ setInbodyDocumentation()\l+ setReference()\l+ setBodySegment()\l+ setBodyDef()\l+ setRefItems()\land 27 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDefinitionMutable.html",tooltip=" "];
  Node6 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +currentMemberDef" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{MemberDef\n||+ definitionType()\l+ deepCopy()\l+ moveTo()\l+ resolveAlias()\l+ resolveAlias()\l+ getClassDefMutable()\l+ getOutputFileBase()\l+ getReference()\l+ anchor()\l+ declaration()\land 179 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMemberDef.html",tooltip=" "];
  Node6 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +indents" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{std::stack\< yy_size_t \>\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node18 [color="grey25",fontsize="10",style="solid",label=" +elements" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +theVarContext" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{VariableContext\n||+ pushScope()\l+ popScope()\l+ clear()\l+ clearExceptGlobal()\l+ addVariable()\l+ findVariable()\l+ atGlobalScope()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classVariableContext.html",tooltip=" "];
  Node20 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +theCallContext" ,arrowhead="odiamond",fontname="Helvetica"];
  Node20 [label="{CallContext\n||+ CallContext()\l+ setScope()\l+ pushScope()\l+ popScope()\l+ clear()\l+ getScope()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCallContext.html",tooltip=" "];
  Node21 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +symbolResolver" ,arrowhead="odiamond",fontname="Helvetica"];
  Node21 [label="{SymbolResolver\n||+ SymbolResolver()\l+ ~SymbolResolver()\l+ resolveClass()\l+ resolveClassMutable()\l+ isAccessibleFrom()\l+ isAccessibleFromWithExpScope()\l+ setFileScope()\l+ getTypedef()\l+ getTemplateSpec()\l+ getResolvedType()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classSymbolResolver.html",tooltip=" "];
  Node22 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +tooltipManager" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{TooltipManager\n||+ TooltipManager()\l+ ~TooltipManager()\l+ addTooltip()\l+ writeTooltips()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classTooltipManager.html",tooltip="Class that manages the tooltips for a source file."];
}
